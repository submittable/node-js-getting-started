name: Resuable Docker Workflow

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      #tag:
        #type: string
    secrets:
      GITHUB_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: true

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Reads the latest tag on the repo and increments its minor verions
      # Increment style can be changed by including a #major, #minor, or #patch in a commit message
      - name: Bump version and push tag
        id: tag_version
        uses: submittable/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main
          WITH_V: false

      # Attempt to make the REF string valid docker tag syntax
      - name: Extract source branch/pr name
        shell: bash
        run: |
          TEMP=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "##[set-output name=branch;]$(echo ${TEMP///-})"
        id: extract_ref_tag

      # Collate the image name, tags, and labels for push command
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
            type=raw,value=${{ steps.tag_version.outputs.new_tag }}
            type=raw,value=${{ steps.extract_ref_tag.outputs.branch }}
            type=raw,value=${{ GitHub.sha }}
      # Build, Tag and Push the docker image to Github Container Registry
      - name: Build, Tag and Push Docker Image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Creates a Github release with the new semantic version
      - name: Create a GitHub Semantic release
        if: endsWith(GitHub.ref, 'main') && success()
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #create a github token and secrets
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      # Sends a slack notification to slack build channel on failure
      - name: Slack Notification - Failure
        if: endsWith(GitHub.ref, 'main') && failure()
        uses: submittable/notify-slack-action@v1
        with:
          footer: 'Linked Repo <{repo_url}|{repo}>'
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      # Sends a slack notification to slack build channel
      - name: Slack Notification - Success
        if: endsWith(GitHub.ref, 'main') && success()
        uses: submittable/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Job for Release ${{ steps.tag_version.outputs.new_tag }} completed successfully.
          SLACK_FOOTER: Powered By Submittable GitHub Actions Library
